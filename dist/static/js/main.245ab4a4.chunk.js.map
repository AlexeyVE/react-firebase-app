{"version":3,"sources":["firebase/firebaseConfig.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/index.js","store/index.js","components/hoc/index.js","components/layout/SinLinks.jsx","components/layout/SoutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","components/error/NotFound.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","INITIAL_STATE","authError","projects","combineReducers","auth","state","action","type","err","console","log","project","payload","firebaseReducer","firestoreReducer","middlewares","thunk","withExtraArgument","getFirebase","getFirestore","logger","createStore","rootReducer","compose","applyMiddleware","reduxFirestore","fbConfig","mapStateToProps","withAuth","Component","connect","props","uid","to","signOut","dispatch","getState","then","logout","profile","className","href","onClick","initials","SoutLinks","links","Notifications","notifications","map","el","key","id","user","content","moment","time","toDate","calendar","ProjectSummary","title","authorFirstName","authorLastName","createAt","ProjectList","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","signIn","credentials","signInWithEmailAndPassword","email","password","catch","sign_in_error","message","useState","setState","e","target","value","handleSubmit","a","preventDefault","onSubmit","htmlFor","onChange","signUp","newUser","createUserWithEmailAndPassword","res","doc","set","firstName","lastName","sign_up_error","createProject","authorId","add","Date","create_project","create_project_error","history","push","NotFound","App","exact","path","component","Dashboard","ProjectDetails","SignIn","SignUp","CreateProject","Boolean","window","location","hostname","rrfProps","config","userProfile","useFirestoreForProfile","store","createFirestoreInstance","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.245ab4a4.chunk.js","sourcesContent":["  \r\n  import firebase from 'firebase/app'\r\n  import 'firebase/firestore'\r\n  import 'firebase/auth'\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyA16SuIti0zCJUkjXm8IIHfLsKiz1LXnK0\",\r\n    authDomain: \"planner-b84c0.firebaseapp.com\",\r\n    databaseURL: \"https://planner-b84c0.firebaseio.com\",\r\n    projectId: \"planner-b84c0\",\r\n    storageBucket: \"planner-b84c0.appspot.com\",\r\n    messagingSenderId: \"216147532009\",\r\n    appId: \"1:216147532009:web:a378b6d6aa6d0b1bd67878\",\r\n    measurementId: \"G-QS5PMM04VS\"\r\n  }\r\n  // Initialize Firebase\r\n  firebase.initializeApp( firebaseConfig )\r\n  firebase.firestore()\r\n  \r\n  export default firebase","// action types\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nconst LOGIN_ERROR = \"LOGIN_ERROR\"\r\n\r\nconst SIGN_OUT = \"SIGN_OUT\"\r\n\r\nconst SIGNUP_SUCCESS = \"SIGN_UP_SUCCESS\"\r\n\r\nconst SIGNUP_ERROR = \"SIGNUP_ERROR\"\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  authError: null,\r\n}\r\n//reducer\r\nexport default ( state = INITIAL_STATE, action ) => {\r\n  switch( action.type ) {\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed. ' + action.err\r\n      }\r\n    case LOGIN_SUCCESS:\r\n      console.log('Login success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case SIGN_OUT:\r\n      console.log('Sign out success')\r\n      return state\r\n    case SIGNUP_SUCCESS:\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case SIGNUP_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: 'Sign up failed. ' + action.err\r\n      }    \r\n    default: return state\r\n  }\r\n}\r\n// actions\r\nconst sign_in = () => ({ type: LOGIN_SUCCESS })\r\n\r\nconst sign_in_error = (err) => ({ type: LOGIN_ERROR, err })\r\n\r\nconst sign_out = () => ({ type: SIGN_OUT })\r\n\r\nconst sign_up = () => ({ type: SIGNUP_SUCCESS })\r\n\r\nconst sign_up_error = (err) => ({ type: SIGNUP_ERROR,err })\r\n//thunks\r\nexport const signIn = (credentials) => \r\n  (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n    return firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password)\r\n    .then(() => dispatch(sign_in()))\r\n    .catch(err => dispatch(sign_in_error(err.message)))\r\n  }\r\n \r\n\r\nexport const signOut = () => \r\n  (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase()\r\n    return firebase.auth().signOut()\r\n    .then(() => {\r\n      firebase.logout()\r\n      dispatch(sign_out())\r\n    })\r\n  }\r\n\r\n\r\nexport const signUp = (newUser) => \r\n  (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase()\r\n    const firestore = getFirestore()\r\n    return firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password)\r\n    .then(res => firestore.collection('users').doc(res.user.uid)\r\n      .set({ \r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0]+newUser.lastName[0]})\r\n    .then(() => dispatch(sign_up()))\r\n    .catch(err => dispatch(sign_up_error(err.message)))\r\n    )\r\n  }","\r\n// action types\r\nconst CREATE_PROJECT = \"CREATE_PROJECT\"\r\nconst CREATE_PROJECT_ERROR = \"CREATE_PROJECT_ERROR\"\r\n\r\nconst INITIAL_STATE = {\r\n  projects: []\r\n}\r\n// reducer\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case CREATE_PROJECT:\r\n      console.log('create project', action.payload)\r\n      return state\r\n    case CREATE_PROJECT_ERROR:\r\n      console.log('create project error', action.err)\r\n      return state  \r\n    default: return state\r\n  }\r\n}\r\n// actions\r\nconst create_project = (payload) => ({ type: CREATE_PROJECT,project: payload })\r\nconst create_project_error = (err) => ({ type :CREATE_PROJECT_ERROR, err })\r\n// thunks\r\nexport const createProject = (payload)  => \r\n  (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore()\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n    return firestore.collection( 'projects' ).add({\r\n     ...payload,\r\n     authorFirstName: profile.firstName,\r\n     authorLastName: profile.lastName,\r\n     authorId: authorId,\r\n     createAt: new Date()\r\n    }).then(() => dispatch( create_project( payload )))\r\n    .catch(( err ) => dispatch( create_project_error( err )))    \r\n  }\r\n","import  authReducer  from './authReducer'\r\nimport  projectReducer  from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport fbConfig from '../firebase/firebaseConfig'\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport rootReducer from '../reducers/'\r\n\r\n\r\nconst middlewares = [\r\n  thunk.withExtraArgument( { getFirebase, getFirestore }),\r\n  logger\r\n]\r\n\r\nexport default createStore( rootReducer,compose(\r\n  applyMiddleware( ...middlewares ),reduxFirestore( fbConfig ))\r\n)\r\n\r\n","import React from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { isLoaded } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst mapStateToProps = (state) => { \r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nexport const withAuth = (Component) => {\r\n  const CheckAuth = ({ ...props }) => {\r\n    if (!props.auth.uid) \r\n    return <Redirect to = \"/signin\"/>\r\n    return <Component {...props}/>\r\n  }  \r\n  return connect(mapStateToProps)(CheckAuth)\r\n}\r\n\r\nexport const AuthIsLoaded = ({ children }) => {\r\n  const auth = useSelector(state => state.firebase.auth)\r\n  if (!isLoaded(auth)) return <div className = \"app-preloader\">Loading...</div>;\r\n  return children\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { signOut } from '../../reducers/authReducer'\r\n\r\nconst SinLinks = (props) => {\r\n  const { profile } = props\r\n  return(\r\n    <ul className = \"right\">\r\n      <li>\r\n        <NavLink to = \"/create-project\">Новый проект</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href = \"/\" onClick = { props.signOut } >Выйти</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to = \"/\" className = \"btn btn-floating  orange lighten-1 \">\r\n          { profile.initials }\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\n// const mapStateToprops = (state) => {\r\n//   return {\r\n  \r\n//   }\r\n// }\r\n\r\nexport default connect(null, { signOut })(SinLinks)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SoutLinks = ( props ) =>\r\n{\r\n  return(\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Зарегистрироваться</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Войти</NavLink>\r\n      </li>\r\n    </ul>\r\n    )\r\n}\r\nexport default SoutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport SinLinks from './SinLinks'\r\nimport SoutLinks from './SoutLinks'\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props\r\n  const links = auth.uid ? <SinLinks profile = { profile } /> : <SoutLinks />\r\n  return(\r\n    <nav className = \"nav-wrapper grey darken-3\">\r\n      <div className = \"container\">\r\n        <Link to = \"/\" className=\"brand-logo\">Планировщик</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\n\r\nconst Notifications = ( props ) => {\r\n  const { notifications } = props\r\n  return(\r\n    <div className = \"section\">\r\n      <div className = \"card z-depth-0 border light-blue lighten-5\">\r\n        <div className = \"card-content\">\r\n          <span className = \"card-title\">Уведомления</span>\r\n          <ul className = \"notification\">\r\n          { notifications && notifications.map(el => {\r\n            return (\r\n              <li className = \"\" key = { el.id }>\r\n                <span className = \"orange-text\"> { el.user } </span>\r\n                <span> { el.content } </span>\r\n                <div className = \"grey-text note-date\">\r\n                  { moment(el.time.toDate()).calendar() }\r\n                </div>\r\n              </li>\r\n              )\r\n          })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className = \"card z-depth-0 project-summary border light-blue lighten-5\">\r\n      <div className = \"card-content grey-text text-darken-3\">\r\n        <span className = \"project-title\">{ project.title }</span>  \r\n        <p>Добавлено: { project.authorFirstName } { project.authorLastName }</p>\r\n        <p className = \"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className = \"project-list section\">\r\n      { projects && projects.map( project =>\r\n        <Link to = { '/project/' + project.id } key = { project.id }> \r\n          <ProjectSummary project = { project } />\r\n        </Link>  \r\n      )}\r\n    </div>  \r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { withAuth } from '../hoc/'\r\n\r\n\r\nconst Dashboard = (props) => {\r\n  const { projects, notifications } = props\r\n  return (\r\n    <div className = \"dashboard container\">\r\n      <div className = \"row\">\r\n        <div className = \"col s12 m6\">\r\n          <ProjectList projects = { projects } />\r\n        </div>\r\n        <div className = \"col s12 m5 offset-m1\">\r\n          <Notifications notifications = { notifications }/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects', orderBy:['createAt','desc']},\r\n    {collection: 'notifications', limit:3, orderBy:['time','desc']}\r\n  ]),withAuth\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\nimport { withAuth } from '../hoc/'\r\n\r\nconst ProjectDetails = ( props ) => {\r\n  const { project } = props\r\n  // moment.locale('ru')\r\n  if ( project ) {\r\n    return (\r\n      <div className = \"container section project-details\">\r\n        <div className = \"card z-depth-0 border light-blue lighten-5\">\r\n          <div className = \"card-content\">\r\n            <span className = \"card-title\">{ project.title }</span>\r\n            <p> { project.content } </p>\r\n          </div>\r\n          <div className = \"card-action grey lighten-4 grey-text\">\r\n            <div>Добавлено: { project.authorFirstName } { project.authorLastName }</div>\r\n            <div>{ moment(project.createAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"container center\">\r\n        Loading project.....\r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state, ownProps ) => {\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect( mapStateToProps ),\r\n  firestoreConnect([\r\n    { collection: 'projects' }  \r\n  ]),withAuth\r\n  )( ProjectDetails )","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../reducers/authReducer'\r\n\r\nconst SignIn = (props) => {\r\n\r\n  const { signIn, authError, auth } = props\r\n\r\n  let [ state, setState ] = useState({})\r\n\r\n  setState = (e) => {\r\n    state[ e.target.id ] = e.target.value\r\n  }\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    signIn(state)\r\n  }\r\n  if (auth.uid) return <Redirect to = \"/\" />\r\n  return (\r\n    <div className = \"container\">\r\n      <form onSubmit = { handleSubmit }  className = \"white\">\r\n        <h5 className = \"grey-text text-darken-3\">Войти</h5>\r\n        <div className = \"input-field\">\r\n          <label htmlFor = \"email\">Почта</label>\r\n          <input type = \"email\" id = \"email\" onChange = { setState }/>\r\n        </div>\r\n        <div className = \"input-field\">\r\n          <label htmlFor = \"password\">Пароль</label>\r\n          <input type = \"password\" id = \"password\" onChange = { setState } />\r\n        </div>\r\n        <div className = \"input-field\">\r\n          <button  className = \"waves-effect waves-light btn btn orange lighten-1 z-depth-0\">\r\n            Вход\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"red-text center\">\r\n        { authError ? <p>{ authError }</p> : null }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { signIn })(SignIn)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../reducers/authReducer'\r\n \r\nconst SignUp = ( props ) => {\r\n\r\nconst { auth, signUp, authError } = props\r\n\r\nlet [ state, setState] = useState({})\r\n\r\nsetState = ( e ) => { \r\n  state[ e.target.id ] = e.target.value\r\n}\r\n\r\nconst handleSubmit = ( e ) => {\r\n  e.preventDefault()\r\n  signUp(state)\r\n}\r\nif (auth.uid) return <Redirect to = \"/\" />\r\nreturn (\r\n  <div className = \"container\">\r\n    <form onSubmit = { handleSubmit }  className = \"white\">\r\n      <h5 className = \"grey-text text-darken-3\">\r\n        Зарегестрироваться\r\n      </h5>\r\n      <div className = \"input-field\">\r\n        <label htmlFor = \"firstName\">Имя</label>\r\n        <input type = \"text\" id = \"firstName\" onChange = { setState }/>\r\n      </div>\r\n      <div className = \"input-field\">\r\n        <label htmlFor = \"lastName\">Фамилия</label>\r\n        <input type = \"text\" id = \"lastName\" onChange = { setState }/>\r\n      </div>\r\n      <div className = \"input-field\">\r\n        <label htmlFor = \"email\">Почта</label>\r\n        <input type = \"email\" id = \"email\" onChange = { setState }/>\r\n      </div>\r\n      <div className = \"input-field\">\r\n        <label htmlFor = \"password\">Пароль</label>\r\n        <input type = \"password\" id = \"password\" onChange = { setState } />\r\n      </div>\r\n      <div className = \"input-field\">\r\n        <button className = \"waves-effect waves-light btn btn orange lighten-1 z-depth-0\">\r\n          Регистрация\r\n        </button>\r\n      </div>\r\n    </form>\r\n    <div className=\"red-text center\">\r\n        { authError ? <p>{ authError }</p> : null }\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{ signUp })(SignUp)","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n// import PropTypes from 'prop-types'\r\nimport { createProject } from '../../reducers/projectReducer'\r\nimport { withAuth } from '../hoc/'\r\n\r\nconst CreateProject = ( props ) => {\r\n\r\n  const { createProject, history } = props \r\n\r\n  let [ state, setState] = useState({})\r\n\r\n  setState = (e) => { \r\n    state[ e.target.id ] = e.target.value\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    createProject(state)\r\n    history.push('/')  \r\n  }\r\n\r\n  return (\r\n    <div className = \"container\">\r\n      <form onSubmit = { handleSubmit }  className = \"white\">\r\n        <h5 className = \"grey-text text-darken-3\">\r\n          Создать новый проект\r\n        </h5>\r\n        <div className = \"input-field\">\r\n          <label htmlFor = \"title\">Название проекта</label>\r\n          <input type = \"text\" id = \"title\" onChange = { setState }/>\r\n        </div>\r\n        <div className = \"input-field\">\r\n          <label htmlFor = \"content\">Описание проекта</label>\r\n          <textarea id = \"content\" \r\n                    className = \"materialize-textarea\" \r\n                    onChange = { setState }>\r\n          </textarea>\r\n        </div>\r\n        <div className = \"input-field\">\r\n          <button className = \"waves-effect waves-light btn btn orange lighten-1 z-depth-0\">\r\n            Добавить\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n// createProject.propTypes = {\r\n\r\n// }\r\n\r\nexport default compose(connect(null, { createProject } ),withAuth)(CreateProject)","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found center\">\r\n      <h1>404 - Страница не найдена</h1>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport NotFound from './components/error/NotFound'\n\nconst App = ( props ) => {\n  return (\n    <BrowserRouter>\n      <div className = \"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path = \"/\" component = { Dashboard } />\n          <Route path = \"/project/:id\" component = { ProjectDetails } />\n          <Route path = \"/signin\" component = { SignIn } />\n          <Route path = \"/signup\" component = { SignUp } />\n          <Route path = \"/create-project\" component = { CreateProject } />\n          <Route component = { NotFound } />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport store from './store/'\nimport { Provider } from 'react-redux'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\nimport firebase from './firebase/firebaseConfig'\nimport { AuthIsLoaded } from './components/hoc/'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './index.css'\n\nconst rrfConfig = { \n  userProfile: 'users',\n  useFirestoreForProfile: true,\n}\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance \n}\n\n\nReactDOM.render(\n  <Provider store = { store }>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>  \n    </ReactReduxFirebaseProvider> \n  </Provider>, document.getElementById('root')\n)\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}